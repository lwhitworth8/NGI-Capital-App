# Backend Dockerfile
FROM python:3.11-slim

WORKDIR /app

# Ensure Python can import the 'src' package reliably
ENV PYTHONPATH=/app

# Install system and binary deps for WeasyPrint + Manim (pycairo)
# - build-essential/gcc/g++/pkg-config for compiling wheels
# - cairo/pango/gdk-pixbuf/harfbuzz/freetype runtime libs
# - ffmpeg for Manim video rendering
RUN apt-get update && apt-get install -y --no-install-recommends \
    build-essential \
    gcc \
    g++ \
    pkg-config \
    curl \
    libcairo2 \
    libcairo2-dev \
    libpango-1.0-0 \
    libpangocairo-1.0-0 \
    libpango1.0-dev \
    libgdk-pixbuf-2.0-0 \
    libgdk-pixbuf-2.0-dev \
    libharfbuzz0b \
    libharfbuzz-dev \
    libfreetype6 \
    libfreetype6-dev \
    libffi-dev \
    ffmpeg \
 && rm -rf /var/lib/apt/lists/*

# Copy requirements
COPY requirements.txt .

# Install Python dependencies (includes manim, pycairo, weasyprint)
# Increase timeout to handle slow networks
ENV PIP_DEFAULT_TIMEOUT=180 \
    PIP_DISABLE_PIP_VERSION_CHECK=1
RUN python -m pip install --upgrade pip \
 && pip install --no-cache-dir -r requirements.txt

# Copy application code
COPY src/ ./src/

# Ensure data directory exists for DB volume mount
RUN mkdir -p /app/data

# Copy scripts for operational tasks (e.g., DB init)
COPY scripts/ ./scripts/

# Expose port
EXPOSE 8001

# Run the application (unified main)
CMD ["uvicorn", "src.api.main:app", "--host", "0.0.0.0", "--port", "8001"]
