name: ci

on:
  pull_request:
  push:
    branches: [ main ]

jobs:
  frontend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'npm'
      - name: Install root deps (workspaces)
        run: npm install
      - name: Type check Desktop
        run: npm run -w apps/desktop type-check
      - name: Lint Desktop
        run: npm run -w apps/desktop lint --if-present
      - name: Test Desktop
        run: npm run -w apps/desktop test -- --ci --passWithNoTests
      - name: Type check Student
        run: npm run -w apps/student type-check
      - name: Lint Student
        run: npm run -w apps/student lint --if-present
      - name: Test Student
        run: npm run -w apps/student test -- --ci --passWithNoTests

  backend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'
      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          # Optional linters (future): ruff, black
          pip install ruff black || true
      - name: Lint (ruff)
        run: ruff check services || true
      - name: Format check (black)
        run: black --check services || true
      - name: Pytests
        run: pytest -q || true

  deploy-vercel:
    name: Deploy to Vercel (CLI)
    needs: [frontend, backend]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Deploy Student (apps/student)
        working-directory: apps/student
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.STUDENT_VERCEL_PROJECT_ID }}
        run: |
          npx vercel@latest pull --yes --environment=production
          npx vercel@latest deploy --prod --yes

      - name: Deploy Admin (apps/desktop)
        working-directory: apps/desktop
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.ADMIN_VERCEL_PROJECT_ID }}
        run: |
          npx vercel@latest pull --yes --environment=production
          npx vercel@latest deploy --prod --yes


