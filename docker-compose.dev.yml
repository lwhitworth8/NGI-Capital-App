services:
  backend:
    image: python:3.11-slim
    container_name: ngi-backend
    working_dir: /app
    command: >
      sh -c "pip install --no-cache-dir -r requirements.txt &&
             uvicorn src.api.main:app --host 0.0.0.0 --port 8001 --reload --reload-exclude='tests/**' --reload-exclude='*.pyc' --reload-exclude='__pycache__/**'"
    ports:
      - "8001:8001"
    volumes:
      - ./:/app
      # Mount your real SQLite DB into the container so API uses it
      - ./ngi_capital.db:/app/data/ngi_capital.db
    environment:
      - PYTHONUNBUFFERED=1
      # Stable secret for JWTs in dev
      - SECRET_KEY=${SECRET_KEY:-ngi-capital-secret-key-2025-secure-internal-app}
      # Explicit DB path for clarity (config also auto-detects /app/data)
      - DATABASE_PATH=/app/data/ngi_capital.db
      # Clerk (fill these from your Clerk dashboard)
      - CLERK_AUDIENCE=backend
      - CLERK_ISSUER=${CLERK_ISSUER:-https://YOUR-CLERK-SUBDOMAIN.clerk.accounts.dev}
      - CLERK_JWKS_URL=${CLERK_JWKS_URL:-https://YOUR-CLERK-SUBDOMAIN.clerk.accounts.dev/.well-known/jwks.json}
    networks:
      - ngi-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  frontend:
    image: node:18-alpine
    container_name: ngi-frontend
    working_dir: /app
    command: >
      sh -c "npm install &&
             npm run dev"
    # No host port; reached via nginx on the bridge network
    expose:
      - "3001"
    volumes:
      - ./apps/desktop:/app
      - /app/node_modules
      - /app/.next
    environment:
      - NODE_ENV=development
      - NEXT_PUBLIC_API_URL=http://backend:8001
      - BACKEND_ORIGIN=http://backend:8001
      - WATCHPACK_POLLING=true
      # Clerk publishable key and URLs
      - NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY=${NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY:-pk_test_replace_me}
      - CLERK_PUBLISHABLE_KEY=${NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY:-pk_test_replace_me}
      - CLERK_SIGN_IN_URL=/sign-in
      - CLERK_SIGN_UP_URL=/sign-up
    depends_on:
      - backend
    networks:
      - ngi-network

  student:
    image: node:18-alpine
    container_name: ngi-student
    working_dir: /app
    command: >
      sh -c "npm install &&
             npm run dev"
    # No host port; reached via nginx on the bridge network
    expose:
      - "3002"
    volumes:
      - ./apps/student:/app
      - /app/node_modules
      - /app/.next
    environment:
      - NODE_ENV=development
      - BACKEND_ORIGIN=http://backend:8001
      - NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY=${NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY:-pk_test_replace_me}
      - CLERK_PUBLISHABLE_KEY=${NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY:-pk_test_replace_me}
      - CLERK_SECRET_KEY=${CLERK_SECRET_KEY:-sk_test_replace_me}
      - CLERK_ISSUER=${CLERK_ISSUER:-https://YOUR-CLERK-SUBDOMAIN.clerk.accounts.dev}
      - CLERK_JWKS_URL=${CLERK_JWKS_URL:-https://YOUR-CLERK-SUBDOMAIN.clerk.accounts.dev/.well-known/jwks.json}
      - USE_MOCK_AUTH=${USE_MOCK_AUTH:-true}
      - NEXT_PUBLIC_MOCK_STUDENT_EMAIL=${NEXT_PUBLIC_MOCK_STUDENT_EMAIL:-student@berkeley.edu}
      - ALLOWED_EMAIL_DOMAINS=${ALLOWED_EMAIL_DOMAINS:-berkeley.edu,ngicapitaladvisory.com}
      - WATCHPACK_POLLING=true
    depends_on:
      - backend
    networks:
      - ngi-network

  nginx:
    image: nginx:alpine
    container_name: ngi-nginx-dev
    ports:
      - "3001:80"
    volumes:
      - ./nginx/nginx.dev.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - frontend
      - backend
      - student
    networks:
      - ngi-network

networks:
  ngi-network:
    driver: bridge
